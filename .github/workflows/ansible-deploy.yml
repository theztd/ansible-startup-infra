name: Ansible deploy

on:
  push: 
    branches:
    - main
    - devel
  pull_request:
    branches:
    - main
    - devel

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-stage:
    runs-on: self-hosted
    #runs-on: ubuntu-latest
    container:
      image: fejk/alpine-aws
    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

#    - name: Start SSH session
#      uses: luchihoratiu/debug-via-ssh@main
#      with:
#        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
#        NGROK_REGION: eu
#        NGROK_TIMEOUT: 300
#        SSH_PASS: tajnse-HESlo123

    - name: Prepare SSH
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "${SSH_KEY}" > ~/.ssh/ssh.key
        cat > ~/.ssh/config<<EOF
        Host *
          User root
          IdentityFile ~/.ssh/ssh.key
          StrictHostKeyChecking no

        EOF
        chmod 600 ~/.ssh/*

      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
    
    - name: Prepare vultr.ini
      run: |
        cat > ./vultr.ini<<EOF
        [default]
        key = $VULTR_API_KEY
        timeout = 30
        EOF

        chmod 600 ./vultr.ini
      env:
        VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}

    - name: Prepare vault
      run: echo "${VAULT_PASS}" > ./vault-pass
      env:
        VAULT_PASS: ${{ secrets.VAULT_PASS }}

    - name: Install ansible dependencies
      run: ansible-galaxy install -r requirements.yml --force

    - name: Linter
      run: ansible-lint .
    
#    # Test if servers are accessable
#    - name: DEVEL - ansible ping
#      run: ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook --vault-password-file ./vault-pass -i ./env/devel ./ping.yml
    
    # Configure servers
    - name: DEVEL - run vultr-deploy.yml
      run: ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook --vault-password-file ./vault-pass -i ./env/devel ./init-cluster.yml --diff

#    - name: Don't kill instace
#      if: ${{ failure() }}
#      run: sleep 5m
