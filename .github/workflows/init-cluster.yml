name: Init cluster

on:
  push: 
    branches:
    - main
    - devel
  pull_request:
    branches:
    - main
    - devel

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      env:
        description: 'ENV'
        required: true
        default: 'devel'
      tags:
        description: 'Choose environment'
        

jobs:
  deploy:
    #runs-on: self-hosted
    runs-on: ubuntu-latest
    container:
      image: fejk/alpine-aws
    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Prepare SSH
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "${SSH_KEY}" > ~/.ssh/ssh.key
        cat > ~/.ssh/config<<EOF
        Host *
          User root
          IdentityFile ~/.ssh/ssh.key
          StrictHostKeyChecking no

        EOF
        chmod 600 ~/.ssh/*
        cp -a ~/.ssh /root/

      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
    
    - name: Prepare vultr.ini
      run: |
        cat > ./vultr.ini<<EOF
        [default]
        key = $VULTR_API_KEY
        timeout = 30
        EOF

        chmod 600 ./vultr.ini
      env:
        VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}

    - name: Prepare vault
      run: echo "${VAULT_PASS}" > ./vault-pass
      env:
        VAULT_PASS: ${{ secrets.VAULT_PASS }}

    - name: Install ansible dependencies
      run: ansible-galaxy install -r requirements.yml --force

    - name: Linter
      run: ansible-lint .
    
    # Configure servers
    - name: ${env} - run init-cluster.yml
      run: ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook --vault-password-file ./vault-pass -i ./env/${env} ./init-cluster.yml --diff
      env:
        env: ${{ github.event.inputs.env }}

#    - name: Don't kill instace
#      if: ${{ failure() }}
#      run: sleep 10m
