---
- hosts: cluster
  roles:
  - role: nomad
    tags:
    - nomad
  - role: nomad-cni
    tags:
    - cni
    - nomad
  - role: consul
    tags:
    - consul

- name: Init nomad master
  hosts: masters
  gather_facts: yes
  remote_user: root
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    ansible_python_interpreter: "/usr/bin/env python3"
    consul_acl_token: false

  tasks:
  - name: Generate bootstrap key
    shell: "nomad acl bootstrap > /root/bootstrap"
    args:
      warn: no
      creates: /root/bootstrap

  - name: Get nomad token
    shell: 'grep "Secret" bootstrap | cut -d= -f2 | xargs'
    register: nom_key

  - set_fact:
      nomad_master_token: "{{ nom_key.stdout }}"

  - name: Nomad shell customization
    copy:
      dest: /etc/profile.d/20-nomad.sh
      mode: 0755
      owner: root
      content: |
        #!/bin/bash
        # managed by Ansible

        complete -C /usr/local/bin/nomad nomad
        complete -C /usr/local/bin/nomad nomad

        alias members="nomad server members ; echo ""; nomad node status -verbose"

        export NOMAD_TOKEN="{{nomad_master_token}}"
        export NOMAD_ADDR="http://localhost:4646"

  - name: Create system namespace
    shell: /bin/bash -lc 'nomad namespace apply -description "system services" system'
    run_once: true

  - name: Get status
    shell: /bin/bash -lc "nomad node status"

  - name: Synchronize configuration definitions
    synchronize:
      src: files/{{ item }}/
      dest: /root/{{ item }}/
      owner: no
      group: no
    with_items:
    - jobs
    - acl
    tags:
    - jobs
    - acl
    - traefik
    - nomad-proxy

  - name: Deploy traefik
    shell: /bin/bash -lc "cd /root/jobs/traefik; nomad run deploy.nomad"
    tags:
    - jobs
    - traefik

  - name: Deploy nomad proxy
    shell: /bin/bash -lc 'cd /root/jobs/nomad-proxy; nomad run -var "fqdn={{ cluster_fqdn }}" deploy.nomad'
    tags:
    - jobs
    - nomad-proxy

  - name: Configure ACL profiles
    shell: /bin/bash -lc 'cd /root/acl; nomad acl policy apply -description "{{ item.desc }}" {{ item.name }} {{ item.path }}'
    with_items:
    - { name: "admins", path: "policy-admins.hcl", desc: "Full access for adminss" }
    - { name: "developers", path: "policy-developers.hcl", desc: "Limited access for developers" }
#    - { name: "pipelines", }
    tags:
    - acl

#  - name: Deploy nomad-proxy
#    block:
#    - copy:
#        src: jobs/nomad-proxy.hcl
#        dest: /root/nomad-proxy.hcl
#    - copy:
#        src: jobs/nomad-proxy_nginx.conf
#        dest: /root/nomad-proxy_nginx.conf
#    - shell: /bin/bash -lc "nomad run -var -var "fqdn=nomad.fejk.net" /root/nomad-proxy_nginx.hcl"
#      args:
#        chdir: /root
#    tags:
#    - jobs

#  - name: Cluster info
#    pause:
#      seconds: 1
#      prompt: |
#
#        Summary
#        =======
#
#        Cluster nodes
#        -------------
#        {% for host in hostvars %}
#        {{ hostvars[host]['inventory_hostname'] }} - {{ hostvars[host].v4_main_ip }}
#        {% endfor %}
#
#        NOMAD_TOKEN   {{nomad_master_token}}
#        
